process DEMO =  {

untracked PSet maxEvents = {untracked int32 input = -1}
  
source = PoolSource 
{ 
     untracked vstring fileNames = {
     'file:/data1/tomei/CMSSW_1_8_4/src/RSGraviton/RSAnalyzer/production/ParameterSpaceScanRECO/RS1000_ZZ_4j_AOD_10TeV_fastsim.root'
     } 
}

#keep the logging output to a nice level
service = MessageLogger {}

#good for debugging
#service = Tracer {}

# Basic plots
service = TFileService { 
    string fileName = "results.root"
  }

###########
# GENJETS #
###########

# Create the GenJets 
include "RecoJets/Configuration/data/GenJetParticles.cff"
include "RecoMET/Configuration/data/GenMETParticles.cff"
include "RecoMET/Configuration/data/RecoGenMET.cff"
include "RecoJets/JetProducers/data/sisCone7GenJetsNoNuBSM.cff"

############
# CALOJETS #
############

# Needed geometry for the CaloJets
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"

# Create the CaloJets
include "RecoJets/JetProducers/data/sisCone7CaloJets.cff"

################
# MC PARTICLES #
################

# Select MC-level particles: Gravitons and Zs
module trueGravitons = PdgIdAndStatusCandViewSelector {
    InputTag src = genParticleCandidates 
    vint32 pdgId = { 5000039 }
    vint32 status = {3}
  }
module trueZs = PdgIdAndStatusCandViewSelector {
    InputTag src = genParticleCandidates
    vint32 pdgId = { 23 }
    vint32 status = {3}
}

# Basic kinematic plots for the MC particles
module plotTrueZs = CandViewHistoAnalyzer {
    InputTag src = trueZs
    include "RSGraviton/RSAnalyzer/data/Zhistos.cff"
  }
module plotTrueGravitons = CandViewHistoAnalyzer {
    InputTag src = trueGravitons
    include "RSGraviton/RSAnalyzer/data/Ghistos.cff"
  }

#######################
# ANALYSIS 4J->2Z->1G #
#######################

# Sort the first 4 Jets
module fourJets = LargestEtGenJetSelector {
    InputTag src = sisCone7GenJetsNoNuBSM
    uint32 maxNumber = 4
  }

# Basic kinematic plots for the Jets
module plotJets = CandViewHistoAnalyzer {
    InputTag src = fourJets
    include "RSGraviton/RSAnalyzer/data/jethistos.cff"
  }

# Combine the jets in order to form Z candidates
module ZCandidates = CandViewCombiner {
    string decay = "fourJets fourJets"
    string cut = "0.0 < mass < 1000.0"
  }

# Basic kinematic plots for the ZCandidates
module plotZCandidates = CandViewHistoAnalyzer {
    InputTag src = ZCandidates
    include "RSGraviton/RSAnalyzer/data/Zhistos.cff"
  }

# Combine the Zcandidates in order to form gravitons
module gravitons = CandViewCombiner {
    string decay = "ZCandidates ZCandidates"
    string cut = "0.0 < mass < 2000.0"
  }

# Basic kinematic plots for the gravitons
module plotGravitons = CandViewHistoAnalyzer {
    InputTag src = gravitons
    include "RSGraviton/RSAnalyzer/data/Ghistos.cff"
  }

###################
# ANALYSIS 2J->1G #
###################

# Get the first two jets
module twoJets = LargestEtGenJetSelector {
    InputTag src = sisCone7GenJetsNoNuBSM
    uint32 maxNumber = 2
  }

# Combine the two first jets in order to form gravitons
module directGravitons = CandViewCombiner {
    string decay = "twoJets twoJets"
    string cut = "0.0 < mass < 2000.0"
  }

# Basic kinematic plots for the direct gravitons
module plotDirectGravitons = CandViewHistoAnalyzer {
    InputTag src = directGravitons
    include "RSGraviton/RSAnalyzer/data/Ghistos.cff"
  }

#################
# DEEP ANALYSIS #
#################

# Create candidates from tracks. My idea is to count tracks inside jets.
include "PhysicsTools/RecoAlgos/data/allTracks.cfi"
replace allTracks.src = ctfGSWithMaterialTracks

module jetanalyzer = RSJetAnalyzer {}

module printTree = ParticleListDrawer {
    InputTag src = genParticleCandidates
    untracked int32 maxEventsToPrint = 1
  }

#############
# SEQUENCES #
#############

sequence makeMC = {genJetParticles, trueGravitons, trueZs, plotTrueGravitons, plotTrueZs}
#sequence makeJets = {sisCone7GenJetsNoNuBSM, fourJets, plotJets}
#sequence makeJets = {sisCone7CaloJets, fourJets, plotJets}
sequence makeZCandidates = {ZCandidates, plotZCandidates}
sequence makeGravitons = {gravitons, plotGravitons}
sequence makeDirectGravitons = {twoJets, directGravitons, plotDirectGravitons} 
sequence makeDeepAnalysis = {matchJetsZs, allTracks, jetanalyzer}

path p1 = {genJetParticles, trueZs, sisCone7GenJetsNoNuBSM, twoJets, jetanalyzer}

#path printing = {printTree}

}
