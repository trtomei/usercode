process USER = { 

############
#   SETUP  #
############

untracked PSet maxEvents = {untracked int32 input = -1}

  source = PoolSource 
  { 
untracked vstring fileNames = {"file:/tmp/tomei/Z3jet_0ptw100-CMSSW167-RecNoPU_16.root"}
  untracked uint32 skipEvents = 493
  }

#  untracked PSet options = {
#     untracked vstring SkipEvent = { "AlpgenProcessID" }
#  }

  module out = PoolOutputModule
  { 
    untracked string fileName = "test.root"
  }

  service = MessageLogger {
#      untracked vstring destinations =  {"debug"}
#      untracked PSet debug = { 
#         untracked string threshold = "DEBUG" 
#         untracked PSet DEBUG = { untracked int32 limit = -1}    
#      }
#      untracked vstring debugModules = {"preanalysis",
#					"QCDanalysis",
#					"EWKanalysis",
#					"QCDEWKanalysis",
#					"windowAnalysis"} 
   }

# service = Tracer { untracked string indention = "$$"}

include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

  module counter = EventCounter{}

################
#   CALO JETS  #
################

# This cuts on jets WITHOUT them being converted to Candidates! :)
# This is my DEFINITION of jet: ICone, R = 0.5, Et > 30 GeV
# The bool filter = true makes sure that there is AT LEAST one
# jet that passes the cut, else the event is dropped.
  module caloJetSele = EtMinCaloJetSelector {    
    InputTag src = iterativeCone5CaloJets
    double etMin = 30.0
    bool filter = true
  }

# this is to get a CandidateCollection from a JetCollection
  module caloJetCollectionClone = CaloJetShallowCloneProducer{
    InputTag src = caloJetSele
  }

  module highestJets = LargestEtCandSelector {
    InputTag src = caloJetCollectionClone 
    uint32 maxNumber = 3
  }

sequence caloJets = {caloJetSele, caloJetCollectionClone, highestJets}

############
#   MUONS  # 
############

include "PhysicsTools/RecoCandAlgos/data/allMuonShallowClones.cfi"
# This gives me the "allMuons" muons.

module highestMuons = LargestPtCandSelector {
    InputTag src = allMuons
    uint32 maxNumber = 2
  }

sequence recoMuons = {allMuons, highestMuons}

##########
#   MET  #
##########

# No special needs for MET.

###############
#   ANALYSIS  #
###############

module preanalysis = VnjetAnalyzer {
    InputTag Jets = caloJetCollectionClone
    InputTag highestJets = highestJets
    InputTag MET = met
    InputTag Muons = highestMuons
    InputTag Particles = genParticleCandidates
    untracked string HistOutFile = "rawdata.root"
  }

sequence rawdataTier = {preanalysis}

module leadingJet = LargestEtCandSelector {
    InputTag src = caloJetCollectionClone 
    uint32 maxNumber = 1
  }

module baseline  = EtaPtMinCandSelector {
    InputTag src = leadingJet
    double ptMin = 0
    double etaMin = -1.3
    double etaMax = 1.3
    bool filter = true
  }

module QCDanalysis = VnjetAnalyzer {
    InputTag Jets = caloJetCollectionClone
    InputTag highestJets = highestJets
    InputTag MET = met
    InputTag Muons = highestMuons
    InputTag Particles = genParticleCandidates
    untracked string HistOutFile = "baseline.root"
  }

sequence baselineTier = {leadingJet, baseline, QCDanalysis}

module leadingMuon = LargestPtCandSelector {
    InputTag src = allMuons 
    uint32 maxNumber = 1
  }

module acceptanceMuon  = EtaPtMinCandSelector {
    InputTag src = leadingMuon
    double ptMin = 7
    double etaMin = -2.1
    double etaMax = 2.1
    bool filter = true
  }

module QCDEWKanalysis = VnjetAnalyzer {
    InputTag Jets = caloJetCollectionClone
    InputTag highestJets = highestJets
    InputTag MET = met
    InputTag Muons = highestMuons
    InputTag Particles = genParticleCandidates
    untracked string HistOutFile = "selection.root"
  }

sequence selectionTier = {leadingMuon, acceptanceMuon, QCDEWKanalysis}

module ZCandidates = MassRangeCandShallowCloneCombiner {
    string decay = "allMuons@+ allMuons@-"
    double massMin = 80
    double massMax = 110
  }

module Zselector = CandCountFilter {
    InputTag src = ZCandidates
    uint32 minNumber = 1
    bool filter = true
  }

module windowAnalysis = VnjetAnalyzer {
   InputTag Jets = caloJetCollectionClone
   InputTag highestJets = highestJets
   InputTag MET = met
   InputTag Muons = highestMuons
   InputTag Particles = genParticleCandidates
   untracked string HistOutFile = "window.root"
}

sequence windowTier = {ZCandidates, Zselector, windowAnalysis}

sequence analysis = { rawdataTier, baselineTier, selectionTier, windowTier }


####################
#   OTHER GOODIES  #
####################

 module printDecay = ParticleDecayDrawer {
    InputTag src = genParticleCandidates
    untracked bool printP4 = false
    untracked bool printPtEtaPhi = false
    untracked bool printVertex = false
  }

 module printTree = ParticleListDrawer {
     untracked int32 maxEventsToPrint = 1
  }

##########################
#   SEQUENCES AND PATHS  #
##########################

path p = {counter, (caloJets & recoMuons), analysis}
# path printing = {printTree}

# endpath end = {out}
} 
